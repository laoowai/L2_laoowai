//@version=4
study("[blackcat] L2 Banker Fund Trajectory for Indice", overlay=false, max_bars_back=5000)

// n1, n2 inputs
n1 = input(3, title="n1", type=input.integer, minval = 1)
n2 = input(6, title="n2", type=input.integer, minval = 1)

// Added inputs for MFI, RSI, and CCI
mfiPeriod = input(14, title="MFI Period", type=input.integer, minval = 1)
rsiPeriod = input(14, title="RSI Period", type=input.integer, minval = 1)
cciPeriod = input(20, title="CCI Period", type=input.integer, minval = 1)

//functions
xrf(values, length) =>
    r_val = float(na)
    if length >= 1
        for i = 0 to length by 1
            if na(r_val) or not na(values[i])
                r_val  :=  values[i]
    r_val

xsa(src,len,wei) =>
    sumf = 0.0
    ma = 0.0
    out = 0.0
    sumf  :=  nz(sumf[1]) - nz(src[len]) + src
    ma  :=  na(src[len]) ? na : sumf/len
    out  :=  na(out[1]) ? ma : (src*wei+out[1]*(len-wei))/len
    out

xcn(cond, len) =>
    count = 0
    for i = 1 to len
        if (cond[i-1])
            count := count + 1
        else
            count := count + 0
    count

xex(cond, len) =>
    occur = xcn(cond, len) != 0 ? 1 : 0
    occur

// Calculation of MFI, RSI, CCI
//mfiValue = mfi(high, low, close, volume, mfiPeriod)
//rsiValue = rsi(close, rsiPeriod)
//cciValue = cci(high, low, close, cciPeriod)
//mfiValue = mfi(mfiPeriod)
//cciValue = cci(cciPeriod)

// Calculation of MFI, RSI, CCI (according to the provided script method)
typicalPrice = hlc3
moneyFlow = typicalPrice * volume
positiveMoneyFlow = na(moneyFlow[1]) ? na : (moneyFlow > moneyFlow[1] ? moneyFlow : 0)
negativeMoneyFlow = na(moneyFlow[1]) ? na : (moneyFlow < moneyFlow[1] ? moneyFlow : 0)
moneyRatio = ema(positiveMoneyFlow, mfiPeriod) / ema(negativeMoneyFlow, mfiPeriod)
mfiValue = 100 - (100 / (1 + moneyRatio))
rsiValue = rsi(close, rsiPeriod)
cciValue = cci(close, cciPeriod)

// Scaling the indicators
mfi_percent = mfiValue / close * 100
rsi_percent = rsiValue / close * 100
cci_percent = cciValue / close * 100

// Added inputs for stop loss and take profit levels
stopLossLevel = input(1, title="Stop Loss (%)", type=input.integer, minval = 1)
takeProfitLevel = input(2, title="Take Profit (%)", type=input.integer, minval = 1)

// Added input for moving average period
maPeriod = input(50, title="MA Period", type=input.integer, minval = 1)

b0 = sma(close,3)
b01 = sma(close,4)
b1 = (high+low+close)/3
b2 = highest(b1,15)
b3 = lowest(b1,15)
b4 = b2-b3
b5 = sma((b1-b3)/b4,2)*100

var2 = (close-xrf(close,1))/xrf(close,1)*100
var3 = (close-lowest(low,18))/(highest(high,18)-lowest(low,18))*100
var4 = xsa(var3,9,1)
var5 = xsa(var4,3,1)
j = 3*var4-2*var5

a2 = ema(var4,n1)
a3 = ema(a2,n1)
a4 = ema(a3,n1)
a5 = ema(a4,n1)
aa = ceil(ema(a5,n2))
aa := aa>1 ? aa : 1

// Added moving average calculation
ma = sma(close, maPeriod)
// Scale
ma_percent = ma / close * 100


plot(b5, color=color.new(color.blue,60), style=plot.style_area, linewidth=2)
plot(ma_percent, color=color.new(color.green,0), style=plot.style_line, linewidth=3)

plotcandle(a2, j, a2, j, color=j>=a2?color.yellow:na)
plotcandle(a2, j, a2, j, color=j<=a2?color.fuchsia:na)

resistance = highest(j,60)
support = lowest(j,aa)
plot(resistance,color=color.new(color.red,40), linewidth=2, style=plot.style_circles)

//oversold zone
plot(support,color=color.new(color.green,40), linewidth=2, style=plot.style_circles)

// Plotting the indicators
plot(mfi_percent, color=color.new(color.red,0), style=plot.style_line, linewidth=3, title="MFI")
plot(rsi_percent, color=color.new(color.orange,0), style=plot.style_line, linewidth=3, title="RSI")
plot(cci_percent, color=color.new(color.purple,0), style=plot.style_line, linewidth=3, title="CCI")

hline(98)
hline(2)
hline(50)

long = crossover(b5,2) and xex(j==support, 3)
short = crossunder(b5,98) and xex(j==resistance, 3)

// Plots cross labels
l = short ? 
       label.new (bar_index,b5, "SELL", color=color.new(color.red,50), textcolor=color.white, style=label.style_labeldown, yloc=yloc.price, size=size.small) :
       long ?
           label.new (bar_index, b5, "BUY", color=color.new(color.green, 50), textcolor=color.white, style=label.style_labelup, yloc=yloc.price, size=size.small) :
           na

alertcondition(condition=long, title="Buy", message="Buy")
alertcondition(condition=short, title="Sell", message="Sell")

// Added stop loss and take profit levels
stopLoss = close - close * stopLossLevel / 100
takeProfit = close + close * takeProfitLevel / 100
